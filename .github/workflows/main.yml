name: Android Cordova Signed APK Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-cordova:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up Java (17)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install Cordova CLI
        run: npm install -g cordova

      - name: Install Cordova Plugins
        run: |
          cordova plugin add cordova-plugin-camera
          cordova plugin add cordova-plugin-sms
          cordova plugin add cordova-plugin-media-capture
          cordova plugin add cordova-plugin-contacts
          cordova plugin add cordova-plugin-file
          cordova plugin add cordova-plugin-file-transfer
          cordova plugin add cordova-plugin-geolocation
          cordova plugin add cordova-plugin-android-permissions
          cordova plugin add cordova-plugin-media
          cordova plugin add cordova-plugin-background-mode
          cordova plugin add cordova-plugin-autostart
          cordova plugin add cordova-plugin-foreground-service
          cordova plugin add cordova-plugin-whitelist

      - name: Add Android Platform
        run: cordova platform add android@13.0.0

      - name: Clean Android Build
        run: cordova clean android

      - name: Cordova prepare (android)
        run: cordova prepare android

      - name: Remove corrupted config.xml (if exists)
        run: |
          FILE="platforms/android/app/src/main/res/xml/config.xml"
          if [ -f "$FILE" ]; then
            rm -f "$FILE"
          fi

      - name: Build unsigned APK
        run: cordova build android --release -- --packageType=apk

      - name: Decode Keystore
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > my-release-key.keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Sign APK
        run: |
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
            -keystore my-release-key.keystore \
            -storepass $KEYSTORE_PASSWORD \
            -keypass $ALIAS_PASSWORD \
            platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk \
            $ALIAS_NAME
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          ALIAS_NAME: ${{ secrets.ALIAS_NAME }}
          ALIAS_PASSWORD: ${{ secrets.ALIAS_PASSWORD }}

      - name: Align and zip APK
        run: |
          zipalign -v 4 platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk signed-app.apk

      - name: Upload Signed APK
        uses: actions/upload-artifact@v4
        with:
          name: signed-apk
          path: signed-app.apk
